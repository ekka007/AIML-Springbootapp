###
name: Workflow of Java Spring Boot

on:
  push:
    branches:
      - dev

# Workflow permissions
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: temurin

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: List build artifacts
        run: ls -alh target/

      - name: Get version from pom.xml
        id: get-version
        run: |
          echo "Project version is: $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"
          echo "::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      - name: Docker metadata
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: trialktyenb.jfrog.io/Springbootapp/epl-example-java-maven-app
          labels: |
            com.uhg.image.askid=ASK-1234
            com.uhg.image.branch=${{ github.ref }}
            com.uhg.image.build=${{ github.run_id }}
            com.uhg.image.buildnumber=${{ github.run_number }}
            com.uhg.image.buildurl=${{ github.run_url }}
            com.uhg.image.repo_id=${{ github.repository_id }}
            com.uhg.image.workflow_name=${{ github.workflow }}
            com.uhg.image.workflow_ref=${{ github.workflow_ref }}
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            org.opencontainers.image.authors=${{ github.event.head_commit.author.name }}
            org.opencontainers.image.url=${{ github.event.head_commit.url }}
            org.opencontainers.image.documentation=${{ github.event.head_commit.url }}
            org.opencontainers.image.vendor=UnitedHealth Group
            org.opencontainers.image.description=Spring Boot Application
          tags: |
            v${{ steps.get-version.outputs.version }}

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type: service_principal

      - name: Docker build & push to ACR
        run: |
          # Log in to your Azure Container Registry
          az acr login --name acrspringbootdev

          # Build the Docker image, tagging with the Maven version
          docker build \
            -t acrspringbootdev.azurecr.io/springbootapp:${{ steps.get-version.outputs.version }} \
            .

          # Push the image
          docker push acrspringbootdev.azurecr.io/springbootapp:${{ steps.get-version.outputs.version }}
